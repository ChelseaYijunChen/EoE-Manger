DROP TABLE IF EXISTS "PedsQL";
CREATE TABLE PedsQL(
pedsqlID INTEGER PRIMARY KEY autoincrement,
patientID INTEGER,
time VARCHAR,
s1q1 INTEGER,
s1q2 INTEGER,
s1q3 INTEGER,
s1q4 INTEGER,
s1q5 INTEGER,
s1q6 INTEGER,
s2q1 INTEGER,
s2q2 INTEGER,
s2q3 INTEGER,
s2q4 INTEGER,
s3q1 INTEGER,
s3q2 INTEGER,
s3q3 INTEGER,
s3q4 INTEGER,
s3q5 INTEGER,
s4q1 INTEGER,
s4q2 INTEGER,
s4q3 INTEGER,
s4q4 INTEGER,
s4q5 INTEGER,
s4q6 INTEGER,
s5q1 INTEGER,
s5q2 INTEGER,
s5q3 INTEGER,
s5q4 INTEGER,
s5q5 INTEGER,
s67 INTEGER,
s6q1 INTEGER,
s6q2 INTEGER,
s6q3 INTEGER,
s6q4 INTEGER,
s7q1 INTEGER,
s7q2 INTEGER,
s7q3 INTEGER,
s8 INTEGER,
s8q1 INTEGER,
s8q2 INTEGER,
FOREIGN KEY(patientID) REFERENCES userInfo(patientID)
);
DROP TABLE IF EXISTS "foodDiary";
CREATE TABLE foodDiary(
   diaryID INTEGER PRIMARY KEY autoincrement,
   patientID INTEGER ,
   time VARCHAR,
   inputPerson VARCHAR,
   image VARCHAR,
   location VARCHAR,
   meal VARCHAR,
   partner VARCHAR,
   feelBefore INTEGER,
   feelAfter INTEGER,
   worry INTEGER,
   FOREIGN KEY(patientID) REFERENCES userInfo(patientID)
);
DROP TABLE IF EXISTS "peess";
CREATE TABLE peess(
peessID INTEGER PRIMARY KEY autoincrement,
patientID INTEGER,
time VARCHAR,
q1f INTEGER,
q1s INTEGER,
q2f INTEGER,
q2s INTEGER,
q3f INTEGER,
q3s INTEGER,
q4f INTEGER,
q4s INTEGER,
q5f INTEGER,
q5s INTEGER,
q6f INTEGER,
q6s INTEGER,
q7f INTEGER,
q7s INTEGER,
q8f INTEGER,
q8s INTEGER,
q9f INTEGER,
q9s INTEGER,
q10f INTEGER,
q11f INTEGER,
FOREIGN KEY(patientID) REFERENCES userInfo(patientID)
);
DROP TABLE IF EXISTS "userInfo";
CREATE TABLE userInfo(
   patientID INTEGER PRIMARY KEY ,
   name VARCHAR NOT NULL,
   birthDate VARCHAR,
   race VARCHAR,
   ethnicity VARCHAR,
   gender VARCHAR,
   grade VARCHAR,
   lengthOfDisease VARCHAR,
   motherEducation VARCHAR,
   fatherEducation VARCHAR,
   familyIncome VARCHAR
);
DROP TABLE IF EXISTS "userSurvey";
CREATE TABLE userSurvey(
   surveyID INTEGER PRIMARY KEY autoincrement,
   patientID INTEGER,
   time VARCHAR,
   steroid INTEGER,
   dietary INTEGER,
   foodElimination INTEGER,
   allergy_syptoms INTEGER,
   allergy_syptoms_food VARCHAR,
   sixFood INTEGER,
   sixFood_food VARCHAR,
   elementalDiet INTEGER,
   exclElemental INTEGER,
   formula INTEGER,
   foodTrial INTEGER,
   foodTrial_food VARCHAR,
   FOREIGN KEY(patientID) REFERENCES userInfo(patientID)
);
